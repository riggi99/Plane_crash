<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Plane_crash1 (Plane_crash1)' inline='true' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Plane_crash1' name='excel-direct.13plqd604kjwgl13p5jny1elhibe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DKIN/Desktop/Python code/data_set/Plane_crash1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.13plqd604kjwgl13p5jny1elhibe' name='Plane_crash1' table='[Plane_crash1$]' type='table'>
          <columns gridOrigin='A1:P754:no:A1:P754:0' header='yes' lost='0' outcome='2' processed='5896'>
            <column datatype='date' date-parse-format='dd MMMM yyyy' name='Date' ordinal='0' />
            <column datatype='string' name='Time' ordinal='1' />
            <column datatype='string' name='Location-1' ordinal='2' />
            <column datatype='string' name='Location-2' ordinal='3' />
            <column datatype='string' name='operator' ordinal='4' />
            <column datatype='string' name='Route' ordinal='5' />
            <column datatype='string' name='Aircraft Company' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='F9' ordinal='8' />
            <column datatype='string' name='Registration' ordinal='9' />
            <column datatype='string' name='Passenger aboard' ordinal='10' />
            <column datatype='integer' name='Crew aboard' ordinal='11' />
            <column datatype='integer' name='Aboard Total' ordinal='12' />
            <column datatype='integer' name='Fatalities passengers' ordinal='13' />
            <column datatype='integer' name='Fatalities Crew' ordinal='14' />
            <column datatype='integer' name='Fatalities total' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P754:no:A1:P754:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location-1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location-1]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Location-1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location-2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location-2]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Location-2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Route]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft Company</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft Company]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Aircraft Company</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Registration]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Registration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passenger aboard</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Passenger aboard]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Passenger aboard</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crew aboard</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crew aboard]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Crew aboard</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aboard Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aboard Total]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Aboard Total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities passengers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities passengers]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Fatalities passengers</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities Crew</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities Crew]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Fatalities Crew</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities total]</local-name>
            <parent-name>[Plane_crash1]</parent-name>
            <remote-alias>Fatalities total</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Aboard Total]' role='measure' type='quantitative' />
      <column datatype='string' name='[Aircraft Company]' role='dimension' type='nominal' />
      <column caption='Total_death' datatype='integer' name='[Calculation_1448188775018196995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Fatalities Crew]+[Fatalities passengers]' />
      </column>
      <column caption='Major_crash_country' datatype='integer' name='[Calculation_177329254521565184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Location-2])' />
      </column>
      <column datatype='integer' name='[Crew aboard]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fatalities Crew]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' name='[Fatalities passengers]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fatalities total]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location-1]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[Location-2]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot; Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot; Arizona&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot; Black Sea&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot; British Colombia&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot; British Columbia&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot; Indian Ocean&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot; Indiana&quot;' value='&quot;British Indian Ocean Territory&quot;' />
          <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
          <semantic-value key='&quot;Alaska&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
          <semantic-value key='&quot;Black Sea&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Democratic Republic Cogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Democratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Democtratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;indonaisa&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
          <semantic-value key='&quot;Netherland&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Newfoundland&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Sky Dive New Zealand&quot;' value='&quot;New Zealand&quot;' />
          <semantic-value key='&quot;South Kazakistan&quot;' value='&quot;Kazakhstan&quot;' />
          <semantic-value key='&quot;South Korean&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;United State&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Aircraft Company]' derivation='Attribute' name='[attr:Aircraft Company:nk]' pivot='key' type='nominal' />
      <column-instance column='[Fatalities Crew]' derivation='Attribute' name='[attr:Fatalities Crew:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities passengers]' derivation='Attribute' name='[attr:Fatalities passengers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities Crew]' derivation='Count' name='[cnt:Fatalities Crew:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities passengers]' derivation='Count' name='[cnt:Fatalities passengers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities total]' derivation='Count' name='[cnt:Fatalities total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities passengers]' derivation='CountD' name='[ctd:Fatalities passengers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities total]' derivation='CountD' name='[ctd:Fatalities total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='CountD' name='[ctd:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities total]' derivation='Sum' name='[cum:sum:Fatalities total:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[cum:sum:Fatalities total:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='ColumnInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[cum:sum:Fatalities total:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Aircraft Company]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Aircraft Company]' />
          <order field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Model]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Sum' name='[diff:sum:Fatalities total:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fatalities total]' derivation='Max' name='[max:Fatalities total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Median' name='[med:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Aircraft Company]' derivation='None' name='[none:Aircraft Company:nk]' pivot='key' type='nominal' />
      <column-instance column='[Fatalities total]' derivation='None' name='[none:Fatalities total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Location-2]' derivation='None' name='[none:Location-2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
      <column-instance column='[Aboard Total]' derivation='Sum' name='[sum:Aboard Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1448188775018196995]' derivation='Sum' name='[sum:Calculation_1448188775018196995:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crew aboard]' derivation='Sum' name='[sum:Crew aboard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities Crew]' derivation='Sum' name='[sum:Fatalities Crew:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities passengers]' derivation='Sum' name='[sum:Fatalities passengers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities total]' derivation='Sum' name='[sum:Fatalities total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_177329254521565184]' derivation='User' name='[usr:Calculation_177329254521565184:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Var' name='[var:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.511568' measure-ordering='alphabetic' measure-percentage='0.488432' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Aircraft Company:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cessna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iluyshin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ilysushin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shorts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sud-Aviation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Antonov&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sikorsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bombardier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helicopter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Learjet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McDonnell Douglas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Short&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Embraer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kawasaki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urocopter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yakovlev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beech&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fokker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Training&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dassault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HESA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sikorsly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;&#9;Mil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;British-Aerospace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gates Learjet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bandeirante&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boeing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canadair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sabreline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sukhoi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;&#9;Eurocopter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Britten-Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fairchild&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Airbus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grumman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Illyushin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skytruck&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KJ-2000&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piper-Navajo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tupolev&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ATR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Black-hawk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kubicek&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yunshuji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;&#9;Lockheed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAF Normad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swearingen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aerocomp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CASA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hawker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reims&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dornier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ilyushin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PZL-Mielec&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Transall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harbin Yunshuji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ilushin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lockheed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pilatus-Britten-Norman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Socata&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antonv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curtiss&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Havilland Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eurocopter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sea-Stallion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;&#9;Boeing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beechcraft&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mustang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junkers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuolev&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aerospatiale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fletcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Let&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Model:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;CL-604&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;777-236ER&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Aircraft Company:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Canadair&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Boeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Aircraft Company:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cessna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iluyshin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ilysushin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shorts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sud-Aviation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Antonov&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sikorsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bombardier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helicopter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Learjet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McDonnell Douglas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Short&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Embraer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kawasaki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urocopter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yakovlev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beech&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fokker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Training&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dassault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HESA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sikorsly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;&#9;Mil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;British-Aerospace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gates Learjet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bandeirante&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boeing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canadair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sabreline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sukhoi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;&#9;Eurocopter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Britten-Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fairchild&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Airbus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grumman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Illyushin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skytruck&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KJ-2000&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piper-Navajo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tupolev&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ATR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Black-hawk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kubicek&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yunshuji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;&#9;Lockheed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAF Normad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swearingen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aerocomp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CASA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hawker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reims&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dornier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ilyushin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PZL-Mielec&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Transall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harbin Yunshuji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ilushin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lockheed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pilatus-Britten-Norman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Socata&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antonv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curtiss&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Havilland Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eurocopter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sea-Stallion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;&#9;Boeing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beechcraft&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mustang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junkers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuolev&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aerospatiale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fletcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Let&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[attr:Aircraft Company:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Canadair&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Boeing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[attr:Fatalities passengers:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities passengers:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Aboard Total:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[usr:Calculation_177329254521565184:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[ctd:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk:9]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[diff:sum:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[max:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities total:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Crew aboard:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[attr:Fatalities Crew:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Fatalities Crew:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Fatalities passengers:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[ctd:Fatalities passengers:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Calculation_1448188775018196995:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities Crew:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[ctd:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[med:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[var:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location-2:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot; Turkey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot; Venezuela&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suiyang County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot; Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot; Afghanistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comoros Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot; Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot; Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot; Angola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;caicos islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;indonaisa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Barthélémy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot; Democratic Republic Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chechnya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot; Alaska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot; Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;india&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot; Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Black Sea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sao tome&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Kazakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot; Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic Cogo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot; Texas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democtratic Republic Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United State&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot; California&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot; Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Paulo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sky Dive New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot; France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot; Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Molokai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malinau district&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot; Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bosnia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Napal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Providencia Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot; Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo Democratic Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Mamarosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Para&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catalina Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Evolga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norfork&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Congress].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Company'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Company with max crash</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Plane_crash1 (Plane_crash1)' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' />
          </datasources>
          <datasource-dependencies datasource='federated.0a6ynco0v0wwbg1e0qvry0yr393b'>
            <column datatype='string' name='[Aircraft Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Aircraft Company]' derivation='Count' name='[cnt:Aircraft Company:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aircraft Company]' derivation='None' name='[none:Aircraft Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Learjet&quot;</bucket>
              <bucket>&quot;Canadair&quot;</bucket>
              <bucket>&quot;Aerospatiale&quot;</bucket>
              <bucket>&quot;Eurocopter&quot;</bucket>
              <bucket>&quot;Sikorsky&quot;</bucket>
              <bucket>&quot;CASA&quot;</bucket>
              <bucket>&quot;British-Aerospace&quot;</bucket>
              <bucket>&quot;Swearingen&quot;</bucket>
              <bucket>&quot;Britten-Norman&quot;</bucket>
              <bucket>&quot;Beechcraft&quot;</bucket>
              <bucket>&quot;ATR&quot;</bucket>
              <bucket>&quot;Tupolev&quot;</bucket>
              <bucket>&quot;Embraer&quot;</bucket>
              <bucket>&quot;Bell&quot;</bucket>
              <bucket>&quot;Ilyushin&quot;</bucket>
              <bucket>&quot;Fokker&quot;</bucket>
              <bucket>&quot;Cessna&quot;</bucket>
              <bucket>&quot;Lockheed&quot;</bucket>
              <bucket>&quot;Airbus&quot;</bucket>
              <bucket>&quot;Mil&quot;</bucket>
              <bucket>&quot;McDonnell Douglas&quot;</bucket>
              <bucket>&quot;Let&quot;</bucket>
              <bucket>&quot;de Havilland Canada&quot;</bucket>
              <bucket>&quot;Boeing&quot;</bucket>
              <bucket>&quot;Antonov&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
            <max>98</max>
          </filter>
          <slices>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' value='N' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Aircraft Company:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='20.0' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Aircraft Company:qk]' max='98' min='10' palette='red_green_gold_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Aircraft Company:qk]' />
              <size column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3A7E31DA-5563-4646-83ED-812032703BF8}' />
    </worksheet>
    <worksheet name='Country More that 10 crash'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Country with more then 10 Crash</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Plane_crash1 (Plane_crash1)' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a6ynco0v0wwbg1e0qvry0yr393b'>
            <column datatype='string' name='[Location-2]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot; Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot; Arizona&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot; Black Sea&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; British Colombia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; British Columbia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; Indian Ocean&quot;' value='&quot;India&quot;' />
                <semantic-value key='&quot; Indiana&quot;' value='&quot;British Indian Ocean Territory&quot;' />
                <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
                <semantic-value key='&quot;Alaska&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
                <semantic-value key='&quot;Black Sea&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Democratic Republic Cogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Democratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Democtratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;indonaisa&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;Netherland&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Newfoundland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Sky Dive New Zealand&quot;' value='&quot;New Zealand&quot;' />
                <semantic-value key='&quot;South Kazakistan&quot;' value='&quot;Kazakhstan&quot;' />
                <semantic-value key='&quot;South Korean&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;United State&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location-2]' derivation='None' name='[none:Location-2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' direction='DESC' using='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' included-values='in-range'>
            <min>9</min>
            <max>100</max>
          </filter>
          <slices>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Number of Records:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Number of Records:qk]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' />
              <color column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8716DD68-E5E6-47BA-9BDC-7C5EC18DC977}' />
    </worksheet>
    <worksheet name='Country with number of crash'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Crashs in &lt;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]&gt;  </run>
            <run fontcolor='#f28e2b'>Crew </run>
            <run fontcolor='#000000'>&amp; </run>
            <run fontcolor='#4e79a7'>Passenger </run>
            <run fontcolor='#000000'>Fatalities &lt;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Plane_crash1 (Plane_crash1)' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a6ynco0v0wwbg1e0qvry0yr393b'>
            <column datatype='string' name='[Aircraft Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Fatalities Crew]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' name='[Fatalities passengers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fatalities total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location-2]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot; Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot; Arizona&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot; Black Sea&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; British Colombia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; British Columbia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot; Indian Ocean&quot;' value='&quot;India&quot;' />
                <semantic-value key='&quot; Indiana&quot;' value='&quot;British Indian Ocean Territory&quot;' />
                <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
                <semantic-value key='&quot;Alaska&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
                <semantic-value key='&quot;Black Sea&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Democratic Republic Cogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Democratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Democtratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;indonaisa&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;Netherland&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Newfoundland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Sky Dive New Zealand&quot;' value='&quot;New Zealand&quot;' />
                <semantic-value key='&quot;South Kazakistan&quot;' value='&quot;Kazakhstan&quot;' />
                <semantic-value key='&quot;South Korean&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;United State&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Fatalities total]' derivation='Sum' name='[cum:sum:Fatalities total:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
            </column-instance>
            <column-instance column='[Aircraft Company]' derivation='None' name='[none:Aircraft Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location-2]' derivation='None' name='[none:Location-2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fatalities Crew]' derivation='Sum' name='[sum:Fatalities Crew:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatalities passengers]' derivation='Sum' name='[sum:Fatalities passengers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities Crew:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities passengers:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities Crew:qk]&quot;</bucket>
              <bucket>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities passengers:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]' included-values='in-range'>
            <max>3281</max>
          </filter>
          <filter class='categorical' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]'>
            <groupfilter function='level-members' level='[none:Aircraft Company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]'>
            <groupfilter function='member' level='[none:Location-2:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;G73T&quot;</bucket>
              <bucket>&quot;24B&quot;</bucket>
              <bucket>&quot;CV-580&quot;</bucket>
              <bucket>&quot;DHC-2&quot;</bucket>
              <bucket>&quot;208B&quot;</bucket>
              <bucket>&quot;CV-440F&quot;</bucket>
              <bucket>&quot;CV-340&quot;</bucket>
              <bucket>&quot;35A&quot;</bucket>
              <bucket>&quot;DHC-8-402&quot;</bucket>
              <bucket>&quot;B-767-222&quot;</bucket>
              <bucket>&quot;B-757-223&quot;</bucket>
              <bucket>&quot;B-777-28EER&quot;</bucket>
              <bucket>&quot;B-757-222&quot;</bucket>
              <bucket>&quot;S-76C++&quot;</bucket>
              <bucket>&quot;DC-8-71F&quot;</bucket>
              <bucket>&quot;369D&quot;</bucket>
              <bucket>&quot;A300F-622R&quot;</bucket>
              <bucket>&quot;C-143&quot;</bucket>
              <bucket>&quot;MC-130H&quot;</bucket>
              <bucket>&quot;C-130T&quot;</bucket>
              <bucket>&quot;60&quot;</bucket>
              <bucket>&quot;AS350&quot;</bucket>
              <bucket>&quot;DHC-6&quot;</bucket>
              <bucket>&quot;55&quot;</bucket>
              <bucket>&quot;III&quot;</bucket>
              <bucket>&quot;25B&quot;</bucket>
              <bucket>&quot;G3&quot;</bucket>
              <bucket>&quot;25&quot;</bucket>
              <bucket>&quot;A300-600R&quot;</bucket>
              <bucket>&quot;AS350BA&quot;</bucket>
              <bucket>&quot;550&quot;</bucket>
              <bucket>&quot;421&quot;</bucket>
              <bucket>&quot;200&quot;</bucket>
              <bucket>&quot;222&quot;</bucket>
              <bucket>&quot;335&quot;</bucket>
              <bucket>&quot;407&quot;</bucket>
              <bucket>&quot;560&quot;</bucket>
              <bucket>&quot;CL-601-2A12&quot;</bucket>
              <bucket>&quot;CRJ-200ER&quot;</bucket>
              <bucket>&quot;206L&quot;</bucket>
              <bucket>&quot;AS355-F1&quot;</bucket>
              <bucket>&quot;BAe-125-800A&quot;</bucket>
              <bucket>&quot;S-61N&quot;</bucket>
              <bucket>&quot;AS-350&quot;</bucket>
              <bucket>&quot;CRJ200LR&quot;</bucket>
              <bucket>&quot;206B&quot;</bucket>
              <bucket>&quot;AS350B2&quot;</bucket>
              <bucket>&quot;B-737-7H4&quot;</bucket>
              <bucket>&quot;SA.227AT&quot;</bucket>
              <bucket>&quot;360-100&quot;</bucket>
              <bucket>&quot;SA.226TC&quot;</bucket>
              <bucket>&quot;SA227AT&quot;</bucket>
              <bucket>&quot;1900D&quot;</bucket>
              <bucket>&quot;300-200&quot;</bucket>
              <bucket>&quot;360&quot;</bucket>
              <bucket>&quot;3101-31&quot;</bucket>
              <bucket>&quot;BN-2A-27&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;P-51D-15-NA&quot;</bucket>
              <bucket>&quot;Sabreliner&quot;</bucket>
              <bucket>&quot;42-320&quot;</bucket>
              <bucket>&quot;MD-83&quot;</bucket>
              <bucket>&quot;BE-1900D&quot;</bucket>
              <bucket>&quot;PA-31/&quot;</bucket>
              <bucket>&quot;L-410&quot;</bucket>
              <bucket>&quot;1124A&quot;</bucket>
              <bucket>&quot;AS&quot;</bucket>
              <bucket>&quot;737-7H4&quot;</bucket>
              <bucket>&quot;737-8BK&quot;</bucket>
              <bucket>&quot;AS350-B2&quot;</bucket>
              <bucket>&quot;DC9-15F&quot;</bucket>
              <bucket>&quot;EC&quot;</bucket>
              <bucket>&quot;206-L4&quot;</bucket>
              <bucket>&quot;737-500&quot;</bucket>
              <bucket>&quot;767-223ER&quot;</bucket>
              <bucket>&quot;A-330-243&quot;</bucket>
              <bucket>&quot;1900C&quot;</bucket>
              <bucket>&quot;412&quot;</bucket>
              <bucket>&quot;767-375ER&quot;</bucket>
              <bucket>&quot;A-320-233&quot;</bucket>
              <bucket>&quot;A310-324&quot;</bucket>
              <bucket>&quot;A320-214&quot;</bucket>
              <bucket>&quot;B-737-3T5&quot;</bucket>
              <bucket>&quot;3201&quot;</bucket>
              <bucket>&quot;BB85Z&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</column>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]</column>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]</column>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' scope='cols' value='No. of People' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]' value='28' />
            <format attr='text-format' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='n0;-0' />
            <format attr='font-size' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' value='Country' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' />
              <lod column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' />
              <tooltip column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <reference-line axis-column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline2' label-type='value' scope='per-cell' value-column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' z-order='1' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk] / [federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk])</rows>
        <cols>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{2CB205AB-FC3D-4E96-9CB7-03A215FAD7AB}' />
    </worksheet>
    <worksheet name='Crew And Passenger'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f28e2b'>Crew</run>
            <run> and </run>
            <run fontcolor='#499894'>Passenger</run>
            <run> Fatalities per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Plane_crash1 (Plane_crash1)' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' />
          </datasources>
          <datasource-dependencies datasource='federated.0a6ynco0v0wwbg1e0qvry0yr393b'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fatalities Crew]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' name='[Fatalities passengers]' role='measure' type='quantitative' />
            <column-instance column='[Fatalities Crew]' derivation='Sum' name='[sum:Fatalities Crew:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatalities passengers]' derivation='Sum' name='[sum:Fatalities passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities Crew:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities passengers:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' scope='rows' value='No of people' />
            <format attr='width' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='72' />
            <encoding attr='space' class='0' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' field-type='quantitative' max='2050.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[yr:Date:ok]' value='39' />
            <format attr='text-orientation' data-class='subtotal' scope='cols' value='-90' />
            <format attr='text-orientation' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='-90' />
            <format attr='text-format' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='n0;-0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='cols' value='0' />
            <format attr='text-orientation' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='0' />
            <format attr='text-format' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' value='n0;-0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='text-orientation' id='refline0' value='0' />
            <format attr='text-format' id='refline0' value='n0;-0' />
            <format attr='wrap' id='refline0' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]' value='Crew  and Passenger Fatalities per year' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]' />
              <text column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' />
            </encodings>
            <reference-line axis-column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</rows>
        <cols>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{2C06C3F3-7E54-4012-85B3-D608B2001884}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Plane_crash1 (Plane_crash1)' name='federated.0a6ynco0v0wwbg1e0qvry0yr393b' />
      </datasources>
      <datasource-dependencies datasource='federated.0a6ynco0v0wwbg1e0qvry0yr393b'>
        <column datatype='string' name='[Aircraft Company]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location-2]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot; Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
            <semantic-value key='&quot; Arizona&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot; Black Sea&quot;' value='&quot;Canada&quot;' />
            <semantic-value key='&quot; British Colombia&quot;' value='&quot;Canada&quot;' />
            <semantic-value key='&quot; British Columbia&quot;' value='&quot;Canada&quot;' />
            <semantic-value key='&quot; Indian Ocean&quot;' value='&quot;India&quot;' />
            <semantic-value key='&quot; Indiana&quot;' value='&quot;British Indian Ocean Territory&quot;' />
            <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
            <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
            <semantic-value key='&quot;Alaska&quot;' value='&quot;United States Minor Outlying Islands&quot;' />
            <semantic-value key='&quot;Black Sea&quot;' value='&quot;Canada&quot;' />
            <semantic-value key='&quot;Democratic Republic Cogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
            <semantic-value key='&quot;Democratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
            <semantic-value key='&quot;Democtratic Republic Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
            <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
            <semantic-value key='&quot;indonaisa&quot;' value='&quot;Indonesia&quot;' />
            <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
            <semantic-value key='&quot;Netherland&quot;' value='&quot;Netherlands&quot;' />
            <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
            <semantic-value key='&quot;Newfoundland&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
            <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Russia&quot;' />
            <semantic-value key='&quot;Sky Dive New Zealand&quot;' value='&quot;New Zealand&quot;' />
            <semantic-value key='&quot;South Kazakistan&quot;' value='&quot;Kazakhstan&quot;' />
            <semantic-value key='&quot;South Korean&quot;' value='&quot;South Korea&quot;' />
            <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
            <semantic-value key='&quot;United State&quot;' value='&quot;United States&quot;' />
            <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Aircraft Company]' derivation='None' name='[none:Aircraft Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location-2]' derivation='None' name='[none:Location-2:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='47778' id='3' name='Country with number of crash' w='59813' x='40563' y='52000' />
        <zone h='6667' id='4' mode='dropdown' name='Country with number of crash' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' type='filter' values='relevant' w='9000' x='89875' y='57667' />
        <zone h='6667' id='5' mode='dropdown' name='Country with number of crash' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' type='filter' w='10375' x='77500' y='57889' />
        <zone h='50889' id='8' name='Crew And Passenger' w='63063' x='36000' y='444' />
        <zone h='51333' id='9' name='Company' w='40375' x='188' y='48000' />
        <zone h='46889' id='11' name='Country More that 10 crash' w='36125' x='1063' y='1667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='27' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='50889' id='8' is-fixed='true' name='Crew And Passenger' w='63063' x='36000' y='444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46889' id='11' is-fixed='true' name='Country More that 10 crash' w='36125' x='1063' y='1667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51333' id='9' is-fixed='true' name='Company' w='40375' x='188' y='48000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='4' mode='dropdown' name='Country with number of crash' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' type='filter' values='relevant' w='9000' x='89875' y='57667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6667' id='5' mode='dropdown' name='Country with number of crash' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' type='filter' w='10375' x='77500' y='57889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47778' id='3' is-fixed='true' name='Country with number of crash' w='59813' x='40563' y='52000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E6B93FA-0C1A-4AC0-93E1-680966ED0512}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Plane Crash investigation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='1534' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='4667' id='3' type='title' w='99000' x='500' y='889' />
            <zone fixed-size='91' h='10111' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99000' x='500' y='5556' />
            <zone h='83444' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99000' x='500' y='15667'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='With every passing day it seems that air travel is becoming safeter with new regulation and technological advancement. The following dash board shows the major countries and companies with catastrophic human losses between 2000 and 2021.' captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='Country with number of crash'>
                        <filter class='categorical' column='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]'>
                          <groupfilter function='member' level='[none:Location-2:nk]' member='&quot;Afghanistan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C0DA176E-AEFA-4D6F-8C87-671908D22953}' />
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CA82D4F4-C26F-4622-ABAA-4D91634FD0F5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Country More that 10 crash'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Date:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Fatalities passengers:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Route:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F622375C-F275-483D-9FCD-055B52EC19AB}' />
    </window>
    <window class='worksheet' name='Country with number of crash'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</field>
                    <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</field>
                  <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]</field>
                  <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cum:sum:Fatalities total:qk]</field>
                  <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]</field>
                  <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;de Havilland Canada&quot;</value>
                <value>&quot;DHC-2&quot;</value>
                <value>38</value>
                <value>&quot;[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities Crew:qk]&quot;</value>
                <value>5.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[Multiple Values]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2 (copy 2):nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2 (copy):nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Location-2:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Calculation_1448188775018196995:qk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities passengers:qk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Fatalities total:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF92EFBB-6BAF-4E7A-8B6E-4EF0406891E1}' />
    </window>
    <window class='worksheet' name='Crew And Passenger'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[:Measure Names]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Date:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[usr:Calculation_1448188774919323649:qk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F18818A-155B-4B6B-8F97-2ACF90516D59}' />
    </window>
    <window class='worksheet' name='Company'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Aircraft Company:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[cnt:Aircraft Company:qk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:AC Type:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Aircraft Company:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:Model:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[none:operator:nk]</field>
            <field>[federated.0a6ynco0v0wwbg1e0qvry0yr393b].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5545301F-569A-4567-B7BE-18038FDC1220}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Company'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country More that 10 crash'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country with number of crash'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Crew And Passenger'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9DABAA6-7A0F-496D-82D8-698747414955}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{9875519F-32D2-40A9-B8C1-713C56A9C254}' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{B6AC050E-E898-41E9-A159-FF25340684B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Company' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARJUlEQVR4nO3d2XIc133H8W8vM92zLxjsG0GQFEULpmVRdlRlRylXJVVJxU6l8gJJ5UXy
      DLnIVV7AlVzlLpVKuezEtCTLkihxX0CA2IGZwew9vecCEkgIQwMRlwG7/5+rmTk9qD9I/Oac
      032mjxKGYYgQMaUOuwAhhkkCIGJNf/bJ8j//K+1b94ZVi3gB5WuXmPr+3rDLODOCmUsE1saJ
      xx0JQPvWPer/+8krK0q8OsmsTzi5PuwyzoyglCDo3D/xOBkCiVgbGADVNCj/5EdHXjPGR19L
      QeLF2K7Pg4324XPfD9mqW0OsaLjuPW7wq082cFx/YLs+6MX0whyB62KMVch9/wp+p0vmwgLN
      L26SLBdxWx2M8QrufhMtnYIgxG21IQxpfXkL5MTq0Ph+yH7HYaPa499/u87iZJa1vR7/8OcL
      mElt2OW9dlt7Pf7s/Sk+/nKXj27ssHRphK7lMlIwaffcwT2AOTWBZpqkF+bo3L6H1+nS39hC
      UVXcZhvNNOjee0TgOBCGoEDoeahGUv74z4D1msVGvc/8WIYrc3mmRlJoqjLssoYiDENuPqjT
      aDtcfWuE+aksra5LqWBQbfQH9wC13/yO0PVQk0kCz8PerdJbXiVwPbRMCq/VAQWU9U3URIIw
      DAkcF0WTKcWwpQyNn1ypkDV1Ficy5NMJytkkakwD8KfXJtlv2bx9vkSj7ZDLJCgXDDKpBJOj
      6cEBCF0P4OATHggD8L2DcaTXcJ8eB/je07FVGASv6vcQp6QoCmNFE4C0efDfW8wmh1nSUGma
      SqWUAqBSOvh3Mb4eChpJbfAQyJgaJ3v5Alo2Q+G9q6im8ZrKFS/K8wOu366yutvl0VaHu2ut
      YZc0VGvbHT7+chfH9bn9aP9Y+8AApOdm0FIpClevEDgOqbnpV16oeDkURWFqJMX99TYb1R57
      TRs/iO/ELJ9JYjse1f0+KxvHPwwGBsDe2SN1bhYU5WByqw8cKYkzKgS8IARFgXgO/Q8tr7eY
      m8wxOZomk0ocax88BwgC2jfvYO/WyFxcoHPnwSsvVLwcnh+wvtfj0nSOIAxxvTC2Z4AAPC9g
      bbuDqipYts/mbpepscxh+8AAWKtPL6k3P73x6qsUL42R0PjpO3LR8hvvL40dPp6bzB5rl/OW
      ItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLW
      JAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1iQAItYkACLWJAAi1iQA
      ItbkvudRoSVRRq4Mu4oz5HR3xJYARIXvENaWh13F2THy/qkOkyGQiDUJQMT4QcjaXo8wDFne
      7hy+fnOlycPN9h9551Otnkur5+J6Afsdh9/eruJ6z98A0Q9CWj33ue1nmQyBIsZ2fP7zs21+
      8eMp/vuLHfylkK7t0+g4VPIGd9darFV7LJ0rcmu1yVjBwHJ9XDdgfjzD8nYXXVPQNZXFyQwr
      210uTef49Vd7jBcNLDdgrGCQMXU8P+DmapO50TTNrksQQjmXpN52GC+ZLIxnTi54yKQHiKDp
      kRS/u1NjYTzD9n6fqwsFACbKJh/fq/HB5Qp31loUMgksJ4DwYMvQj+/WaFsufcc/8vPMhEoy
      oVLvOARByN21FtWmzR8e7vPehTLb+308P6TZdbnxuIEfhHT73jB+9f836QEiRtdVfnC+yFa9
      TzGbwPUCvnzcRFUV7q61+LufzHL9dpV3zhUIw4Od1L9RyCTYqFnMjaZJ6iqppEalYPDxvTrv
      nMuzvd+n7wQsTBz0FJemc/zqxg5jJZOpkRSPt7vMVtIoCuhvyL5kEoCISeoqk+UUk+XUc4/5
      ix9OPLft4lTuyPP5MZ35rzeVmyg9/ZlvzeTp9j1qLZtrF8skdJVzb8CQ59skAOI7y5g6H7xd
      GXYZL0QCEDGO63P9Tg3bDb7eJjXg5z+eQlHejCHJ6yYBiJhkQiNtathuQCmbRFXA80MSugRg
      EAlAxPRsj47lkdAVun0Pzw/RNfnjfx4JQMSkDZ2fXR0fdhlvDLkOIGJNegARSVv6DN1keOJx
      EgARSTf3V9ls3D3xOBkCiViTAIhI21ptcP/GNv4zq1l9L8DqOoAMgUTEtZt9JuYKVLfa7Gy0
      0HWVYiXD+nKd6fMlCYCINt8L6HUcbMulMpEjaerUdzrMLpZp7fclACLa8qUUrbrF2EyeREJD
      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
    </thumbnail>
    <thumbnail height='192' name='Country More that 10 crash' width='192'>
      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
      SkpY/v8D8T8Ex/2qRp4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country with number of crash' width='192'>
      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
      /z8LCe1Xj5HRwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crew And Passenger' width='192'>
      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
      JYkE4P8DX8FYZPhXeUoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      djDPvJKMVVYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
